# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from . import orchestrator_pb2 as orchestrator__pb2

GRPC_GENERATED_VERSION = '1.67.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in orchestrator_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class SandboxStub(object):
    """Interface exported by the server.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Create = channel.unary_unary(
                '/Sandbox/Create',
                request_serializer=orchestrator__pb2.SandboxCreateRequest.SerializeToString,
                response_deserializer=orchestrator__pb2.SandboxCreateResponse.FromString,
                _registered_method=True)
        self.List = channel.unary_unary(
                '/Sandbox/List',
                request_serializer=orchestrator__pb2.SandboxListRequest.SerializeToString,
                response_deserializer=orchestrator__pb2.SandboxListResponse.FromString,
                _registered_method=True)
        self.Delete = channel.unary_unary(
                '/Sandbox/Delete',
                request_serializer=orchestrator__pb2.SandboxRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.Deactive = channel.unary_unary(
                '/Sandbox/Deactive',
                request_serializer=orchestrator__pb2.SandboxRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.Search = channel.unary_unary(
                '/Sandbox/Search',
                request_serializer=orchestrator__pb2.SandboxRequest.SerializeToString,
                response_deserializer=orchestrator__pb2.SandboxSearchResponse.FromString,
                _registered_method=True)
        self.Purge = channel.unary_unary(
                '/Sandbox/Purge',
                request_serializer=orchestrator__pb2.SandboxPurgeRequest.SerializeToString,
                response_deserializer=orchestrator__pb2.SandboxPurgeResponse.FromString,
                _registered_method=True)


class SandboxServicer(object):
    """Interface exported by the server.
    """

    def Create(self, request, context):
        """Create is a gRPC service that creates a new sandbox.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def List(self, request, context):
        """List is a gRPC service that returns a list of all the sandboxes.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Delete is a gRPC service that kills a sandbox.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Deactive(self, request, context):
        """Invoke memory reclaim for a sandbox **on host**.
        TODO(huang-jl): Active interface (which needs modification to FC)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Search(self, request, context):
        """search a sandbox with id
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Purge(self, request, context):
        """Purge will be invoked in rare case. typically when orchestrator crashes
        and forget to cleanup the sandbox. So the client can call this method
        to purge the orphan sandbox manually
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SandboxServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=orchestrator__pb2.SandboxCreateRequest.FromString,
                    response_serializer=orchestrator__pb2.SandboxCreateResponse.SerializeToString,
            ),
            'List': grpc.unary_unary_rpc_method_handler(
                    servicer.List,
                    request_deserializer=orchestrator__pb2.SandboxListRequest.FromString,
                    response_serializer=orchestrator__pb2.SandboxListResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=orchestrator__pb2.SandboxRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Deactive': grpc.unary_unary_rpc_method_handler(
                    servicer.Deactive,
                    request_deserializer=orchestrator__pb2.SandboxRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Search': grpc.unary_unary_rpc_method_handler(
                    servicer.Search,
                    request_deserializer=orchestrator__pb2.SandboxRequest.FromString,
                    response_serializer=orchestrator__pb2.SandboxSearchResponse.SerializeToString,
            ),
            'Purge': grpc.unary_unary_rpc_method_handler(
                    servicer.Purge,
                    request_deserializer=orchestrator__pb2.SandboxPurgeRequest.FromString,
                    response_serializer=orchestrator__pb2.SandboxPurgeResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Sandbox', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('Sandbox', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Sandbox(object):
    """Interface exported by the server.
    """

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Sandbox/Create',
            orchestrator__pb2.SandboxCreateRequest.SerializeToString,
            orchestrator__pb2.SandboxCreateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Sandbox/List',
            orchestrator__pb2.SandboxListRequest.SerializeToString,
            orchestrator__pb2.SandboxListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Sandbox/Delete',
            orchestrator__pb2.SandboxRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Deactive(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Sandbox/Deactive',
            orchestrator__pb2.SandboxRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Search(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Sandbox/Search',
            orchestrator__pb2.SandboxRequest.SerializeToString,
            orchestrator__pb2.SandboxSearchResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Purge(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Sandbox/Purge',
            orchestrator__pb2.SandboxPurgeRequest.SerializeToString,
            orchestrator__pb2.SandboxPurgeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
